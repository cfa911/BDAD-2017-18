DROP TABLE IF EXISTS SALE;
DROP TABLE IF EXISTS ADDRESS;
DROP TABLE IF EXISTS BID;
DROP TABLE IF EXISTS ITEMTAG;
DROP TABLE IF EXISTS ITEM;
DROP TABLE IF EXISTS ADVERTISEMENTTAG;
DROP TABLE IF EXISTS ADVERTISEMENT;
DROP TABLE IF EXISTS TAG;
DROP TABLE IF EXISTS VOTE;
DROP TABLE IF EXISTS VENDOR;
DROP TABLE IF EXISTS BUYER;
DROP TABLE IF EXISTS USER;

CREATE TABLE USER
(
	userID INTEGER PRIMARY KEY,
	nome TEXT NOT NULL,
	password VARCHAR(50) NOT NULL,
	nib INTEGER NOT NULL UNIQUE,
	cellphone INTEGER NOT NULL UNIQUE,
	email TEXT NOT NULL UNIQUE,
	rating FLOAT NOT NULL,
	numVotes INTEGER
);

CREATE TABLE BUYER
(
	buyerID INTEGER PRIMARY KEY,
	nome TEXT NOT NULL,
	password VARCHAR(50) NOT NULL,
	nib INTEGER NOT NULL UNIQUE,
	cellphone INTEGER NOT NULL UNIQUE,
	email TEXT NOT NULL UNIQUE
);

CREATE TABLE VENDOR
(
	vendorID INTEGER PRIMARY KEY,
	nome TEXT NOT NULL,
	password VARCHAR(50) NOT NULL,
	nib INTEGER NOT NULL UNIQUE,
	cellphone INTEGER NOT NULL UNIQUE,
	email TEXT NOT NULL UNIQUE,
	rating FLOAT NOT NULL,
	numVotes INTEGER
);

CREATE TABLE VOTE
(
	buyerID INTEGER REFERENCES BUYER,
	vendorID INTEGER REFERENCES VENDOR,
	vote INTEGER NOT NULL Check (vote >= 0 AND vote <= 5),
	PRIMARY KEY(buyerID,vendorID)
);

CREATE TABLE TAG
(
	tagName VARCHAR(20) NOT NULL PRIMARY KEY
);

CREATE TABLE ADVERTISEMENT
(

	advertisementID INTEGER PRIMARY KEY,
	pageNumber INTEGER NOT NULL,
	description TEXT,
	exposingFee MONEY NOT NULL Check(exposingFee > 0),
	vendorID INTEGER NOT NULL,
	FOREIGN KEY(vendorID) REFERENCES VENDOR(vendorID)
);

CREATE TABLE ADVERTISEMENTTAG
(
	advertisementID INTEGER REFERENCES ADVERTISEMENT,
	tagName TEXT REFERENCES TAG,
	PRIMARY KEY(advertisementID,tagName)
);

CREATE TABLE ITEM
(
	itemID INTEGER PRIMARY KEY,
	name TEXT NOT NULL,
	shippingCoverage BOOLEAN,
	startTime DATETIME,
	closeTime DATETIME,
	highestBid MONEY NOT NULL Check(highestBid >= 0),
	advertisementID INTEGER NOT NULL,
	buyerID INTEGER,
	FOREIGN KEY(advertisementID) REFERENCES ADVERTISEMENT(advertisementID),
	FOREIGN KEY(buyerID) REFERENCES BUYER(buyerID)
);

CREATE TABLE ITEMTAG
(
	itemID INTEGER REFERENCES ITEM,
	tagName TEXT REFERENCES TAG,
	PRIMARY KEY(itemID,tagName)
);

CREATE TABLE BID
(
	value MONEY NOT NULL Check(value >= 0),
	dateV DATETIME,
	itemID INTEGER REFERENCES ITEM,
	buyerID INTEGER REFERENCES BUYER,
	PRIMARY KEY(dateV,itemID,buyerID)
);

CREATE TABLE ADDRESS
(
	address TEXT NOT NULL PRIMARY KEY,
	postalCode CHAR(8) NOT NULL,
	buyerID INTEGER NOT NULL,
	FOREIGN KEY (buyerID) REFERENCES BUYER(buyerID)
);

CREATE TABLE SALE
(
	siteCommission MONEY NOT NULL Check(siteCommission > 0),
	transferLimitDate DATE NOT NULL,
	itemID INTEGER PRIMARY KEY REFERENCES ITEM,
	address TEXT NOT NULL,
	buyerID INTEGER NOT NULL,
	FOREIGN KEY(address) REFERENCES ADDRESS(address),
	FOREIGN KEY(buyerID) REFERENCES BUYER(buyerID)
);
